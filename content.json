{"meta":{"title":"Nancelglap的博客","subtitle":"不想正经","description":"广工无名小卒","author":"Nancelglap","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"Eloquent 关系","slug":"Eloquent-关系","date":"2017-05-02T01:28:10.000Z","updated":"2017-05-02T07:33:07.000Z","comments":true,"path":"2017/05/02/Eloquent-关系/","link":"","permalink":"http://yoursite.com/2017/05/02/Eloquent-关系/","excerpt":"Eloquent 一对一等关系","text":"Eloquent 一对一等关系 1、设置外键（默认名称为user_id）1$table -&gt; integer(&apos;user_id&apos;) -&gt; default(1); //创建后第二个表中的所有数据都属于user表中id为1的用户 在链关系中如果最后一项为函数的话可以不用加( ) 2、创建关系 一对一关系 如果一个User模型与另一个model模型对应，定义一个method方法在User模型中，method方法调用Eloquent模型基类上hasOne方法并返回结果1234567891011&lt;?phpnamespace App;use Illuminate\\Database\\Eloquent\\Model;class User extends Model&#123; public function method() &#123; return $this-&gt;hasOne('App\\model'); &#125;&#125; hasOne方法的第一个参数为关联模型的名称。通过动态属性访问关联方法：12$new = User::find(1)-&gt;method; //返回结果集，可以进一步调用属性$new = User::find(1)-&gt;method-&gt;name; //返回在models表中user_id为1的信息的名字 hasOne方法默认关联外键为user_id，如果想让model的其他作为外键，传入第二个参数：1return $this -&gt; hasOne('App\\model', 'foreign_key'); hasOne方法默认通过id值去models表中查询user_id与之匹配的记录，如果想换主键匹配，传递第三个参数给hasOne:1return $this-&gt;hasOne('App\\model', 'foreign_key', 'local_key'); 定义相对的关联也可以在model模型中定义关系关联User，使用belongsTo方法定义；1234567891011&lt;?php namespace App; use Illuminat\\Database\\Eloquent\\Model; class model extends Model&#123; public function user() &#123; return $this-&gt;belongsTo('App\\User'); &#125; &#125; 如果model模型上的外键不是user_id，父模型不使用id作为主键：1234public function user()&#123; return $this-&gt;belongsTo('App\\User', 'foreign_key', 'other_primarykey');&#125; 用法1$new = App\\model::find(1)-&gt;user(); //返回user表中id为1的信息 一对多关系 123456789101112&lt;?php namespace App; use Illuminate\\Database\\Eloquent\\Model; //Posts表有id作为主键 class Post extends Model&#123; public function comments() &#123; return $this -&gt; hasMany('App\\Comment'); &#125; &#125; Eloquent自动判断Comment模型的外键，默认某列中名称有_id后缀为外键访问关联方法（用法）：123456use App\\Post;$comments = App\\Post::find(1)-&gt;comments; //先用find找到一个用户，再调用函数foreach($comments as $comment)&#123; //&#125; 增加约束条件1$comments = App\\Post::find(1)-&gt;comments()-&gt;where()-&gt;first; 通过第二个参数，第三个参数自定义外键和主键1return $this-&gt;hasMany('App\\Comment', 'foreign_key', 'local_key'); 更多详见 laravelacademy.org/post/6996.html","categories":[{"name":"note","slug":"note","permalink":"http://yoursite.com/categories/note/"}],"tags":[{"name":"laravel","slug":"laravel","permalink":"http://yoursite.com/tags/laravel/"},{"name":"Eloquent","slug":"Eloquent","permalink":"http://yoursite.com/tags/Eloquent/"}]},{"title":"Laravel 文件上传","slug":"laravel文件上传","date":"2017-04-30T13:21:06.000Z","updated":"2017-05-01T02:12:43.000Z","comments":true,"path":"2017/04/30/laravel文件上传/","link":"","permalink":"http://yoursite.com/2017/04/30/laravel文件上传/","excerpt":"Laravel文件上传操作","text":"Laravel文件上传操作 1.在blade文件中的表格指定文件上传的name1234&lt;form method=\"POST\" action=\"url\" enctype=\"multipart/form-data\"&gt;&lt;input type=\"hidden\" name=\"_token\" value=\"&#123;&#123;csrf_token()&#125;&#125;\"&gt;&lt;input type=\"file\" name=\"newfile\"&gt;&lt;input type=\"submit\" name=\"sub\"&gt; 2.改配置文件修改config/filesystems.php文件，加入以下代码1234567&apos;uploads&apos; =&gt; [ &apos;driver&apos; =&gt; &apos;local&apos;, //文件上传到storage/app/uploads目录 &apos;root&apos; =&gt; storage_path(&apos;app/uploads&apos;), //如果文件上传到public/uploads目录 则上一行代码换成下面一行 //&apos;root&apos; =&gt; public_path(&apos;uploads&apos;),] 3.在Controller中获取文件信息并上传getClientOriginalName方法获取文件原名getRealPath( )方法获取缓存在tmp文件夹下的文件绝对路径getClientOriginalExtension( )方法获取上传文件的后缀getMimeType( )方法返回类似image/jpeg1234567891011121314151617181920212223242526272829303132333435363738&lt;?phpnamespace App\\Http\\Controllers;use Illuminate\\Http\\Request;use Storage;use App\\Http\\Requests;class FileController extends Controller&#123; // 文件上传方法 public function upload(Request $request) &#123; if ($request-&gt;isMethod('post')) &#123; $file = $request-&gt;file('picture'); // 验证文件是否上传成功并处理上传 if ($file-&gt;isValid()) &#123; /*****获取文件相关信息*****/ $originalName = $file-&gt;getClientOriginalName(); // 文件原名 $ext = $file-&gt;getClientOriginalExtension(); // 扩展名 $realPath = $file-&gt;getRealPath(); //临时文件的绝对路径 $type = $file-&gt;getClientMimeType(); // image/jpeg /**********************/ /*****上传文件*****/ $filename = date('Y-m-d-H-i-s') . '-' . uniqid() . '.' . $ext; // 使用新建的uploads本地存储空间（目录） $bool = Storage::disk('uploads')-&gt;put($filename, file_get_contents($realPath)); /****************/ var_dump($bool); &#125; &#125; return view('upload'); &#125;&#125; 4.注意(CSRF报错) laravel默认开启CSRF验证，不是get请求的话需要验证CSRF 解决办法1：加隐藏表单如果表单中加了以下1&lt;input type=\"hidden\" name=\"_token\" value=\"&#123;&#123;csrf_token()&#125;&#125;\"&gt; 仍然报以下错误，用解决办法21TokenMismatchException in VerifyCsrfToken.php line 68: 解决办法2：禁用CSRF修改文件：app\\Http\\Kernel.php，注释掉以下代码1&apos;App\\Http\\Middleware\\VerifyCsrfToken&apos;","categories":[{"name":"note","slug":"note","permalink":"http://yoursite.com/categories/note/"}],"tags":[{"name":"laravel","slug":"laravel","permalink":"http://yoursite.com/tags/laravel/"}]},{"title":"Route 相关","slug":"Route相关","date":"2017-04-30T12:21:49.000Z","updated":"2017-05-01T02:13:01.000Z","comments":true,"path":"2017/04/30/Route相关/","link":"","permalink":"http://yoursite.com/2017/04/30/Route相关/","excerpt":"Route相关知识","text":"Route相关知识 项目中一般不用Route::resource( )Http方法patch对应Controller的update函数Http方法delete对应Controller的destory函数Http方法post对应Controller的store函数Http方法get且路径为/path/create对应Controller的create函数特殊:get路径为/path/{参数}/edit对应Controller的edit函数 部分资源路由（Resource）12Route::resource('new', 'newController', ['only'=&gt;['index', 'show']]); //只处理index和show方法Route::resource('new', 'newController', ['except'=&gt;['create', 'store']]); //处理除了create和store的方法","categories":[{"name":"note","slug":"note","permalink":"http://yoursite.com/categories/note/"}],"tags":[{"name":"laravel","slug":"laravel","permalink":"http://yoursite.com/tags/laravel/"},{"name":"Route","slug":"Route","permalink":"http://yoursite.com/tags/Route/"}]},{"title":"Blade 相关","slug":"Blade-Warning","date":"2017-04-29T13:06:20.000Z","updated":"2017-05-01T02:19:00.000Z","comments":true,"path":"2017/04/29/Blade-Warning/","link":"","permalink":"http://yoursite.com/2017/04/29/Blade-Warning/","excerpt":"","text":"一、blade实现编辑页面自动填充表单1. 在Controller中1$content = model名::findOrFail($id); 2. 在视图文件中使用Form-Model-Binding1&#123;!! Form::model($content, [&apos;method&apos;=&gt;&apos;PATCH&apos;, &apos;url&apos;=&gt;&apos;/path/&apos;.$content-&gt;id]) !!&#125; 二、Blade模板中的注意事项 如果从Controller传过来的数组为一维关联数组，可以直接用数组中的键作为变量 重用的代码放到一个文件里，在需要用的视图文件用@include(&#39;view&#39;s name&#39;)","categories":[{"name":"note","slug":"note","permalink":"http://yoursite.com/categories/note/"}],"tags":[{"name":"laravel","slug":"laravel","permalink":"http://yoursite.com/tags/laravel/"},{"name":"blade","slug":"blade","permalink":"http://yoursite.com/tags/blade/"}]},{"title":"Laravel 函数","slug":"My-New-Post","date":"2017-04-29T04:28:00.000Z","updated":"2017-05-01T02:12:53.000Z","comments":true,"path":"2017/04/29/My-New-Post/","link":"","permalink":"http://yoursite.com/2017/04/29/My-New-Post/","excerpt":"有关laravel的函数","text":"有关laravel的函数 old( )函数old函数获取一次性从Session获取的值，如果有第二个参数，则代表函数当第一个参数不存在时取第二个参数 当表单被填充但是验证失败需要返回原始输入数据 12345//$fields为默认值的关联数组$data = [];foreach ($this-&gt;fields as $field =&gt; $default)&#123; $data[$field] = old($field, $default);&#125; array_except( )函数array_except方法从数组中移除给定键值对，第二个参数为[&#39;键名&#39;]1$array = array_except($array, ['price']); //移除array数组以`price`为键的键值对 array_keys( )函数array_keys函数返回包含数组中所有键名的一个新数组12$a = $array(\"name\"=&gt;\"lee\", \"sex\"=&gt;\"male\");$b = array_keys($a); //b为array([0]=&gt;name, [1]=&gt;sex) withSuccess( )函数withSuccess函数参数为一个字符串语句，在重定向redirect( )后使用，在相应的视图文件中可用Session类获取12345//在控制器中 redirect('/path') -&gt; withSuccess('Succeed.');//在视图文件中 Session::has('success'); //判断是否存在 Session::get('success'); //获取控制器中withSuccess()中的字符串","categories":[{"name":"note","slug":"note","permalink":"http://yoursite.com/categories/note/"}],"tags":[{"name":"laravel","slug":"laravel","permalink":"http://yoursite.com/tags/laravel/"},{"name":"blade","slug":"blade","permalink":"http://yoursite.com/tags/blade/"}]}]}