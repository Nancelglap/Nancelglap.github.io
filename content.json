{"meta":{"title":"Nancelglap的博客","subtitle":"不想正经","description":"广工无名小卒","author":"Nancelglap","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"laravel文件上传","slug":"laravel文件上传","date":"2017-04-30T13:21:06.000Z","updated":"2017-04-30T16:49:32.000Z","comments":true,"path":"2017/04/30/laravel文件上传/","link":"","permalink":"http://yoursite.com/2017/04/30/laravel文件上传/","excerpt":"1.在blade文件中的表格指定文件上传的name","text":"1.在blade文件中的表格指定文件上传的name 1234&lt;form method=\"POST\" action=\"url\" enctype=\"multipart/form-data\"&gt;&lt;input type=\"hidden\" name=\"_token\" value=\"&#123;&#123;csrf_token()&#125;&#125;\"&gt;&lt;input type=\"file\" name=\"newfile\"&gt;&lt;input type=\"submit\" name=\"sub\"&gt; 2.改配置文件修改config/filesystems.php文件，加入以下代码1234567&apos;uploads&apos; =&gt; [ &apos;driver&apos; =&gt; &apos;local&apos;, //文件上传到storage/app/uploads目录 &apos;root&apos; =&gt; storage_path(&apos;app/uploads&apos;), //如果文件上传到public/uploads目录 则上一行代码换成下面一行 //&apos;root&apos; =&gt; public_path(&apos;uploads&apos;),] 3.在Controller中获取文件信息并上传getClientOriginalName方法获取文件原名getRealPath( )方法获取缓存在tmp文件夹下的文件绝对路径getClientOriginalExtension( )方法获取上传文件的后缀getMimeType( )方法返回类似image/jpeg123456789101112131415161718192021222324252627282930313233&lt;?phpnamespace App\\Http\\Controllers;use Illuminate\\Http\\Request;use Storage;use App\\Http\\Requests;class FileController extends Controller&#123; // 文件上传方法 public function upload(Request $request) &#123; if ($request-&gt;isMethod('post')) &#123; $file = $request-&gt;file('picture'); // 文件是否上传成功 if ($file-&gt;isValid()) &#123; // 获取文件相关信息 $originalName = $file-&gt;getClientOriginalName(); // 文件原名 $ext = $file-&gt;getClientOriginalExtension(); // 扩展名 $realPath = $file-&gt;getRealPath(); //临时文件的绝对路径 $type = $file-&gt;getClientMimeType(); // image/jpeg // 上传文件 $filename = date('Y-m-d-H-i-s') . '-' . uniqid() . '.' . $ext; // 使用我们新建的uploads本地存储空间（目录） $bool = Storage::disk('uploads')-&gt;put($filename, file_get_contents($realPath)); var_dump($bool); &#125; &#125; return view('upload'); &#125;&#125;","categories":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/categories/笔记/"}],"tags":[{"name":"laravel","slug":"laravel","permalink":"http://yoursite.com/tags/laravel/"}]},{"title":"Route相关","slug":"Route相关","date":"2017-04-30T12:21:49.000Z","updated":"2017-04-30T16:49:41.000Z","comments":true,"path":"2017/04/30/Route相关/","link":"","permalink":"http://yoursite.com/2017/04/30/Route相关/","excerpt":"项目中一般不用Route::resource( )","text":"项目中一般不用Route::resource( ) Http方法patch对应Controller的update函数Http方法delete对应Controller的destory函数Http方法post对应Controller的store函数Http方法get且路径为/path/create对应Controller的create函数特殊:get路径为/path/{参数}/edit对应Controller的edit函数 部分资源路由（Resource）12Route::resource('new', 'newController', ['only'=&gt;['index', 'show']]); //只处理index和show方法Route::resource('new', 'newController', ['except'=&gt;['create', 'store']]); //处理除了create和store的方法","categories":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/categories/笔记/"}],"tags":[{"name":"laravel","slug":"laravel","permalink":"http://yoursite.com/tags/laravel/"},{"name":"Route","slug":"Route","permalink":"http://yoursite.com/tags/Route/"}]},{"title":"Blade Warning","slug":"Blade-Warning","date":"2017-04-29T13:06:20.000Z","updated":"2017-04-30T16:49:19.000Z","comments":true,"path":"2017/04/29/Blade-Warning/","link":"","permalink":"http://yoursite.com/2017/04/29/Blade-Warning/","excerpt":"Blade模板中的注意事项","text":"Blade模板中的注意事项 如果从Controller传过来的数组为一维关联数组，可以直接用数组中的键作为变量","categories":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/categories/笔记/"}],"tags":[{"name":"laravel","slug":"laravel","permalink":"http://yoursite.com/tags/laravel/"},{"name":"blade","slug":"blade","permalink":"http://yoursite.com/tags/blade/"}]},{"title":"laravel函数","slug":"My-New-Post","date":"2017-04-29T04:28:00.000Z","updated":"2017-04-30T02:07:00.000Z","comments":true,"path":"2017/04/29/My-New-Post/","link":"","permalink":"http://yoursite.com/2017/04/29/My-New-Post/","excerpt":"有关laravel的函数","text":"有关laravel的函数 old( )函数old函数获取一次性从Session获取的值，如果有第二个参数，则代表函数当第一个参数不存在时取第二个参数 当表单被填充但是验证失败需要返回原始输入数据 12345//$fields为默认值的关联数组$data = [];foreach ($this-&gt;fields as $field =&gt; $default)&#123; $data[$field] = old($field, $default);&#125; array_except( )函数array_except方法从数组中移除给定键值对，第二个参数为[&#39;键名&#39;]1$array = array_except($array, ['price']); //移除array数组以`price`为键的键值对 array_keys( )函数array_keys函数返回包含数组中所有键名的一个新数组12$a = $array(\"name\"=&gt;\"lee\", \"sex\"=&gt;\"male\");$b = array_keys($a); //b为array([0]=&gt;name, [1]=&gt;sex) withSuccess( )函数withSuccess函数参数为一个字符串语句，在重定向redirect( )后使用，在相应的视图文件中可用Session类获取12345//在控制器中 redirect('/path') -&gt; withSuccess('Succeed.');//在视图文件中 Session::has('success'); //判断是否存在 Session::get('success'); //获取控制器中withSuccess()中的字符串","categories":[{"name":"笔记","slug":"笔记","permalink":"http://yoursite.com/categories/笔记/"}],"tags":[{"name":"laravel","slug":"laravel","permalink":"http://yoursite.com/tags/laravel/"},{"name":"blade","slug":"blade","permalink":"http://yoursite.com/tags/blade/"}]}]}